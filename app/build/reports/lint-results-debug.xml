<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.0.2">

    <issue
        id="MediaCapabilities"
        severity="Warning"
        message="The app accesses `MediaStore.Video`, but is missing a `&lt;property>` tag with a `android.content.MEDIA_CAPABILITIES` declaration"
        category="Correctness"
        priority="5"
        summary="Media Capabilities property not specified"
        explanation="In Android 12 and higher, an app that opens media files should explicitly specify media formats that it doesn&apos;t support, so the OS can provide a transcoded file instead."
        errorLine1="    &lt;application"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/AndroidManifest.xml"
            line="5"
            column="6"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.appcompat:appcompat than 1.4.0 is available: 1.6.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.appcompat:appcompat:1.4.0&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/build.gradle"
            line="36"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.google.android.material:material than 1.4.0 is available: 1.8.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.google.android.material:material:1.4.0&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/build.gradle"
            line="37"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.google.android.gms:play-services-nearby than 18.0.1 is available: 18.5.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.google.android.gms:play-services-nearby:18.0.1&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/build.gradle"
            line="38"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.test.ext:junit than 1.1.3 is available: 1.1.5"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    androidTestImplementation &apos;androidx.test.ext:junit:1.1.3&apos;"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/build.gradle"
            line="40"
            column="31"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.test.espresso:espresso-core than 3.4.0 is available: 3.5.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    androidTestImplementation &apos;androidx.test.espresso:espresso-core:3.4.0&apos;"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/build.gradle"
            line="41"
            column="31"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.google.firebase:firebase-perf than 19.1.0 is available: 20.3.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.google.firebase:firebase-perf:19.1.0&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/build.gradle"
            line="61"
            column="20"/>
    </issue>

    <issue
        id="GradleDynamicVersion"
        severity="Warning"
        message="Avoid using + in version numbers; can lead to unpredictable and unrepeatable builds (junit:junit:4.+)"
        category="Correctness"
        priority="4"
        summary="Gradle Dynamic Version"
        explanation="Using `+` in dependencies lets you automatically pick up the latest available version rather than a specific, named version. However, this is not recommended; your builds are not repeatable; you may have tested with a slightly different version than what the build server used. (Using a dynamic version as the major version number is more problematic than using it in the minor version position.)"
        errorLine1="    testImplementation &apos;junit:junit:4.+&apos;"
        errorLine2="                       ~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/build.gradle"
            line="39"
            column="24"/>
    </issue>

    <issue
        id="DeprecatedProvider"
        severity="Warning"
        message="The `BC` provider is deprecated and as of Android P this method will throw a `NoSuchAlgorithmException`. To fix this you should stop specifying a provider and use the default implementation"
        category="Security"
        priority="9"
        summary="Using BC Provider"
        explanation="The `BC` provider has been deprecated and will not be provided when `targetSdkVersion` is P or higher."
        url="https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html"
        urls="https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html"
        errorLine1="    Cipher cipher = Cipher.getInstance(&quot;RSA/ECB/PKCS1Padding&quot;, &quot;BC&quot;);"
        errorLine2="                                                               ~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function2629.java"
            line="21"
            column="64"/>
    </issue>

    <issue
        id="GetInstance"
        severity="Warning"
        message="`Cipher.getInstance` should not be called without setting the encryption mode and padding"
        category="Security"
        priority="9"
        summary="Cipher.getInstance with ECB"
        explanation="`Cipher#getInstance` should not be called with ECB as the cipher mode or without setting the cipher mode because the default mode on android is ECB, which is insecure."
        errorLine1="    Cipher cipher = Cipher.getInstance(&quot;AES&quot;);"
        errorLine2="                                       ~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function15227.java"
            line="11"
            column="40"/>
    </issue>

    <issue
        id="GetInstance"
        severity="Warning"
        message="`Cipher.getInstance` should not be called without setting the encryption mode and padding"
        category="Security"
        priority="9"
        summary="Cipher.getInstance with ECB"
        explanation="`Cipher#getInstance` should not be called with ECB as the cipher mode or without setting the cipher mode because the default mode on android is ECB, which is insecure."
        errorLine1="        Cipher cipher = Cipher.getInstance(&quot;AES&quot;);"
        errorLine2="                                           ~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/kudi/Function2621.java"
            line="15"
            column="44"/>
    </issue>

    <issue
        id="GetInstance"
        severity="Warning"
        message="`Cipher.getInstance` should not be called without setting the encryption mode and padding"
        category="Security"
        priority="9"
        summary="Cipher.getInstance with ECB"
        explanation="`Cipher#getInstance` should not be called with ECB as the cipher mode or without setting the cipher mode because the default mode on android is ECB, which is insecure."
        errorLine1="        Cipher cipher = Cipher.getInstance(&quot;AES&quot;);"
        errorLine2="                                           ~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/kudi/Function2623.java"
            line="14"
            column="44"/>
    </issue>

    <issue
        id="GetInstance"
        severity="Warning"
        message="ECB encryption mode should not be used"
        category="Security"
        priority="9"
        summary="Cipher.getInstance with ECB"
        explanation="`Cipher#getInstance` should not be called with ECB as the cipher mode or without setting the cipher mode because the default mode on android is ECB, which is insecure."
        errorLine1="    Cipher cipher = Cipher.getInstance(&quot;AES/ECB/PKCS5PADDING&quot;);"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function4228.java"
            line="14"
            column="40"/>
    </issue>

    <issue
        id="GetInstance"
        severity="Warning"
        message="ECB encryption mode should not be used"
        category="Security"
        priority="9"
        summary="Cipher.getInstance with ECB"
        explanation="`Cipher#getInstance` should not be called with ECB as the cipher mode or without setting the cipher mode because the default mode on android is ECB, which is insecure."
        errorLine1="        Cipher cipher = Cipher.getInstance(&quot;AES/ECB/PKCS5Padding&quot;);"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function4230.java"
            line="16"
            column="44"/>
    </issue>

    <issue
        id="PackageManagerGetSignatures"
        severity="Warning"
        message="Reading app signatures from `getPackageInfo`: The app signatures could be exploited if not validated properly; see issue explanation for details"
        category="Security"
        priority="8"
        summary="Potential Multiple Certificate Exploit"
        explanation="Improper validation of app signatures could lead to issues where a malicious app submits itself to the Play Store with both its real certificate and a fake certificate and gains access to functionality or information it shouldn&apos;t have due to another application only checking for the fake certificate and ignoring the rest. Please make sure to validate all signatures returned by this method."
        url="https://bluebox.com/technical/android-fake-id-vulnerability/"
        urls="https://bluebox.com/technical/android-fake-id-vulnerability/"
        errorLine1="        PackageInfo packageInfo = pContext.getPackageManager().getPackageInfo(pContext.getPackageName(), PackageManager.GET_SIGNATURES);"
        errorLine2="                                                                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function4222.java"
            line="17"
            column="106"/>
    </issue>

    <issue
        id="BadHostnameVerifier"
        severity="Warning"
        message="`verify` always returns `true`, which could cause insecure network traffic due to trusting TLS/SSL server certificates for wrong hostnames"
        category="Security"
        priority="6"
        summary="Insecure HostnameVerifier"
        explanation="This check looks for implementations of `HostnameVerifier` whose `verify` method always returns true (thus trusting any hostname) which could result in insecure network traffic caused by trusting arbitrary hostnames in TLS/SSL certificates presented by peers."
        errorLine1="            public boolean verify(String hostname, SSLSession session) {"
        errorLine2="                           ~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function2969.java"
            line="20"
            column="28"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkClientTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers."
        errorLine1="                public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function2968.java"
            line="33"
            column="29"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkClientTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers."
        errorLine1="            public void checkClientTrusted(X509Certificate[] certs, String authType) {"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function2969.java"
            line="31"
            column="25"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkServerTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers."
        errorLine1="            public void checkServerTrusted(X509Certificate[] certs, String authType) {"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function2969.java"
            line="34"
            column="25"/>
    </issue>

    <issue
        id="CustomX509TrustManager"
        severity="Warning"
        message="Implementing a custom `X509TrustManager` is error-prone and likely to be insecure. It is likely to disable certificate validation altogether, and is non-trivial to implement correctly without calling Android&apos;s default implementation."
        category="Security"
        priority="5"
        summary="Implements custom TLS trust manager"
        explanation="This check looks for custom `X509TrustManager` implementations."
        errorLine1="            TrustManager[] trustManagers = new TrustManager[]{new X509TrustManager() {"
        errorLine2="                                                                  ~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function2968.java"
            line="31"
            column="67"/>
    </issue>

    <issue
        id="CustomX509TrustManager"
        severity="Warning"
        message="Implementing a custom `X509TrustManager` is error-prone and likely to be insecure. It is likely to disable certificate validation altogether, and is non-trivial to implement correctly without calling Android&apos;s default implementation."
        category="Security"
        priority="5"
        summary="Implements custom TLS trust manager"
        explanation="This check looks for custom `X509TrustManager` implementations."
        errorLine1="        TrustManager[] trustAllCerts = new TrustManager[] { new X509TrustManager() {"
        errorLine2="                                                                ~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function2969.java"
            line="26"
            column="65"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Warning"
        message="On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute `android:fullBackupContent` to specify an `@xml` resource which configures which files to backup, or just set `android:fullBackupOnly=true`. More info: https://developer.android.com/guide/topics/data/autobackup"
        category="Security"
        priority="3"
        summary="AllowBackup/FullBackupContent Problems"
        explanation="The `allowBackup` attribute determines if an application&apos;s data can be backed up and restored. It is documented at https://developer.android.com/reference/android/R.attr.html#allowBackup&#xA;&#xA;By default, this flag is set to `true` which means application data can be backed up and restored by the OS. Setting `allowBackup=&quot;false&quot;` opts the application out of being backed up and so users can&apos;t restore data related to it when they go through the device setup wizard.&#xA;&#xA;Allowing backups may have security consequences for an application. Currently `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.&#xA;&#xA;To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`.&#xA;&#xA;If not set to false, and if targeting API 23 or later, lint will also warn that you should set `android:fullBackupContent` or `android:fullBackupOnly` to configure auto backup."
        url="https://developer.android.com/guide/topics/data/autobackup"
        urls="https://developer.android.com/guide/topics/data/autobackup,https://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="        android:allowBackup=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/AndroidManifest.xml"
            line="6"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is never &lt; 31"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.M) {"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function2959.java"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 31"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT &amp;&amp; Build.VERSION.SDK_INT &lt;= Build.VERSION_CODES.LOLLIPOP_MR1) {"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function2968.java"
            line="24"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is never &lt; 31"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT &amp;&amp; Build.VERSION.SDK_INT &lt;= Build.VERSION_CODES.LOLLIPOP_MR1) {"
        errorLine2="                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/java/com/example/glm/Function2968.java"
            line="24"
            column="64"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="This folder configuration (`v24`) is unnecessary; `minSdkVersion` is 31. Merge all the resources in this folder into `drawable`."
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder.">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/res/drawable-v24"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="This folder configuration (`v26`) is unnecessary; `minSdkVersion` is 31. Merge all the resources in this folder into `mipmap-anydpi`."
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder.">
        <location
            file="/Users/jessechen/Documents/GitHub/glm_jesse/glm/app/src/main/res/mipmap-anydpi-v26"/>
    </issue>

</issues>
